<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Profile page</title>
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!--Bootstrap CSS-->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css"
      integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l"
      crossorigin="anonymous"
    />

    <!-- Font Awesome-->
    <script src="https://kit.fontawesome.com/4b5aa82aa9.js" crossorigin="anonymous"></script>
  </head>
  <body>
    {{>navbarAccount}}
    <div class="container-fluid d-flex p-2 flex-column justify-content-center">
      <div class="d-flex flex-column p-2 align-items-center">
        <img src="/images/python-code-unsplash.jpg" alt="" class="rounded-circle" style="width: 150px; height: 150px" />
        <i class="fas fa-edit position-absolute" style="right: 46%"></i>
        <h3 class="text-center font-weight-bold">{{ user.nickname }}</h3>
        <a class="btn btn-danger btn-sm py-1 my-0" href="#" id="delete-account">Delete account</a>
      </div>
      <div class="d-flex flex-row p-2">
        <div class="card my-2 bg-white" style="width: 50%">
          <div class="container">
            <div class="row">
              <div class="col-sm">
                <div class="card-body">
                  <h4 class="card-title mb-4">User information</h4>
                  <div class="d-flex justify-content-between">
                    <h6 class="card-text">Name</h6>
                    <a href="#" class="card-link h6" id="name">{{ user.name }}</a>
                  </div>
                  <hr />
                  <div class="d-flex justify-content-between">
                    <h6 class="card-text">Email</h6>
                    <a href="#" class="card-link h6" id="email">{{ user.email }}</a>
                  </div>
                  <hr />
                  <div class="d-flex justify-content-between">
                    <h6 class="card-text">User ID</h6>
                    <h6 class="card-text">{{ user._id }}</h6>
                  </div>
                  <hr />
                  <div class="d-flex justify-content-between">
                    <h6 class="card-text">Password</h6>
                    <input
                      style="max-width: 400px"
                      type="password"
                      name="password"
                      id="password"
                      class="d-inline-block form-control card-text h6 text-truncate"
                      placeholder="{{ user.password }}"
                      readonly
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="card my-2 bg-white" style="width: 50%">
          <div class="container">
            <div class="card-body">
              <h4 class="card-title mb-4">Solution information</h4>
              <div class="d-flex justify-content-between">
                <h6 class="card-text">Uploaded solutions</h6>
                <h6 class="card-text">{{ uploaded }}</h6>
              </div>
              <hr />
              <div class="d-flex justify-content-between">
                <h6 class="card-text">Most recent solution</h6>
                <a href="/solution/{{ recent }}" class="card-link h6">view</a>
              </div>
              <hr />
            </div>
          </div>
        </div>
      </div>
    </div>
    <!--TODO: sweetalerty definicja -->
    {{>footer}}
    {{>scripts}}
    {{>sweetalert2}}
    <script type="module">
      import { Validator } from '/javascripts/client-side-validator.js';
      const name = document.querySelector('#name');
      const email = document.querySelector('#email');
      const password = document.querySelector('#password');

      name.addEventListener('click', (e) => {
        e.preventDefault();
        changeName('Succesfully changed user name!');
      });

      email.addEventListener('click', (e) => {
        e.preventDefault();
        changeEmail('Successfully changed email!');
      });

      password.addEventListener('click', (e) => {
        e.preventDefault();
        changePassword('Succesfully changed your password!', Validator.validatePasswordChange);
      });

      const btnDelete = document.querySelector('#delete-account');
      btnDelete.addEventListener('click', async (e) => {
        e.preventDefault();
        const swal = await Swal.fire({
          icon: 'warning',
          title: 'Do you really want to delete your account?',
          text: 'All your solutions will be removed!',
          showCancelButton: true,
          confirmButtonText: `Delete`,
        });

        if (swal) {
          /* Read more about isConfirmed, isDenied below */
          if (swal.isConfirmed) {
            let timerInterval;
            const result = await Swal.fire({
              title: 'Deleting in progress!',
              html: 'You will be redirected in <b></b> milliseconds.',
              timer: 2000,
              timerProgressBar: true,
              allowOutsideClick: false,
              didOpen: () => {
                Swal.showLoading();
                timerInterval = setInterval(() => {
                  const content = Swal.getContent();
                  if (content) {
                    const b = content.querySelector('b');
                    if (b) {
                      b.textContent = Swal.getTimerLeft();
                    }
                  }
                }, 100);
              },
              willClose: () => {
                clearInterval(timerInterval);
              },
            });

            if (result.dismiss === Swal.DismissReason.timer) {
              const res = await fetch('/user/me', {
                method: 'DELETE',
                headers: {
                  'Content-Type': 'application/json',
                },
              });
              location.href = await res.url;
            }
          } else if (swal.isDenied) {
            Swal.fire('Changes are not saved', '', 'info');
          }
        }
      });
    </script>
  </body>
</html>
